version: "1.3.0"
cache: true

interface:
  mcpServers:
    placeholder: "MCP Servers"
  privacyPolicy:
    externalUrl: "https://docs.pelsue.com/tools/pelsuechat/"
    openNewTab: true
  termsOfService:
    externalUrl: "https://docs.pelsue.com/tools/pelsuechat/"
    openNewTab: true
    modalAcceptance: true
    modalTitle: "Terms of Service"
    modalContent: |
      # Terms of Service
      ## Introduction
      Welcome to LibreChat!
 

webSearch:
  serperApiKey: "${SERPER_API_KEY}"
  searchProvider: "serper"
  
  firecrawlApiKey: "${FIRECRAWL_API_KEY}"
  scraperType: "firecrawl"


  jinaApiKey: "${JINA_API_KEY}"
  rerankerType: "jina"

  scraperTimeout: 7500 # Timeout in milliseconds for scraper requests (default: 7500)
  safeSearch: 1 # Options: 0 (OFF), 1 (MODERATE - default), 2 (STRICT)

  


registration:
  socialLogins: ["openid"]   # Entra only

endpoints:
  openAI:
    enabled: false
  anthropic:
    enabled: false
  google:
    enabled: false
  custom:
    - name: "OpenRouter"                # appears in the model selector
      baseURL: "https://openrouter.ai/api/v1"
      apiKey: "${OPENROUTER_KEY}"
      models:
        default: [
          "x-ai/grok-4-fast",
          "openai/gpt-4o",
          "openai/gpt-oss-120b",
          "openai/gpt-5-chat",
          "anthropic/claude-sonnet-4.5",
          "google/gemini-2.5-flash"
          ]  # only this model
        fetch: false
      titleConvo: true
      titleModel: "openai/gpt-4o"
      modelDisplayLabel: "Model"   # label on message bubbles


mcpServers:
  supabaseReadonly:  # Custom name for this server (e.g., for UI dropdown)
    name: "Supabase Database (Readonly)"
    description: "Query your Supabase database with natural language. Readonly SELECT queries only."
    url: "https://mcp.supabase.com/mcp?read_only=true"  # Supabase remote MCP with readonly flag
    transport: "streamable-http"  # Recommended for production/multi-user; stateless and scalable
    headers:  # Authentication: Use Supabase API keys
      Authorization: "Bearer {{SUPABASE_ANON_KEY}}"  # Replace with your anon key; use env var
      apikey: "{{SUPABASE_ANON_KEY}}"  # Duplicate for compatibility
    projectRef: "{{SUPABASE_PROJECT_REF}}"  # Optional: Scope to your project ID/ref for isolation (e.g., "abcdefghijklmnop")
    # Optional: Add more headers or params if needed (e.g., for custom auth)
    # For project-scoped: The server auto-limits to this project after auth.

